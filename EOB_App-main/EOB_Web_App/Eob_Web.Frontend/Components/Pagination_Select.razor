<ul class="pagination justify-content-center">
    @if (Page_Number <= 1)
    {
        <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
    }
    else
    {
        <li class="page-item"><a class="page-link" href="/@Page_Name/@(Page_Number - 1)">Previous</a></li>
    }

    @for (int i = 1; i <= _total_Pages; i++)
    {
        if (i == Page_Number)
        {
            <li class="page-item active"><a class="page-link" href="/@Page_Name/@i">@i</a></li>
        }
        else
        {
            <li class="page-item"><a class="page-link" href="/@Page_Name/@i">@i</a></li>
        }
    }

    @if (Page_Number >= _total_Pages)
    {
        <li class="page-item disabled"><a class="page-link" href="#">Next</a></li>
    }
    else
    {
        <li class="page-item"><a class="page-link" href="/@Page_Name/@(Page_Number + 1)">Next</a></li>
    }
</ul>

@code {
    [Parameter]
    public string Page_Name { get; set; }

    [Parameter]
    public int Page_Number { get; set; }

    [Parameter]
    public int Total_Items { get; set; }

    [Parameter]
    public int Page_Size { get; set; }

    private int _total_Pages;

    protected override void OnParametersSet()
    {
        Get_Total_Pages();
    }

    public void Get_Total_Pages()
    {
        _total_Pages = (int)Math.Ceiling(decimal.Divide(Total_Items, Page_Size));
    }
}
